# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.YPlane(y0=-1198.13390304907)
S2 = openmc.ZPlane(z0=-3.06609444138)
S3 = openmc.Sphere(x0=936.819833460198,y0=-1198.13390304907,z0=45.080000000000695,r=54.580000000000794)
S4 = openmc.Sphere(x0=936.819833460198,y0=-1198.13390304907,z0=45.080000000000204,r=52.080000000000204)
S5 = openmc.ZPlane(z0=156.06609444175604)
S6 = openmc.Sphere(x0=936.8198334602001,y0=-1198.13390304907,z0=107.92000000000199,r=52.079999999997796)
S7 = openmc.Sphere(x0=936.8198334602001,y0=-1198.13390304907,z0=107.92000000000098,r=54.579999999998805)
S8 = openmc.ZPlane(z0=-0.8607951357100021)
S9 = openmc.ZTorus(x0=936.819833460198,y0=-1198.13390304907,z0=12.4283384802999,r=17.435000000002802,r1=17.5649999999987,r2=17.5649999999987)
S10 = openmc.ZPlane(z0=153.860801054)
S11 = openmc.ZTorus(x0=936.819833460199,y0=-1198.13390304907,z0=140.57166152,r=17.434999999999004,r1=17.565000000003202,r2=17.565000000003202)
S12 = openmc.ZPlane(z0=140.57166152)
S13 = openmc.ZPlane(z0=12.428338480299999)
S14 = openmc.ZCylinder(x0=936.8198334602001,y0=-1198.13390304907,r=35.0)
S15 = openmc.ZCylinder(x0=936.8198334602001,y0=-1198.13390304907,r=32.5)
S16 = openmc.ZTorus(x0=936.819833460203,y0=-1198.13390304907,z0=12.428338480295,r=17.4349999999968,r1=15.065000000000001,r2=15.065000000000001)
S17 = openmc.ZTorus(x0=936.8198334601962,y0=-1198.13390304907,z0=140.57166152,r=17.435000000004802,r1=15.065000000000502,r2=15.065000000000502)
S18 = openmc.ZPlane(z0=45.080000000000204)
S19 = openmc.ZPlane(z0=107.92000000001866)
S20 = openmc.Plane(a=8.514173328511306e-14,b=0.28883682873361405,c=-0.9573783402433486,d=-389.2238125330105)
S21 = openmc.Plane(a=8.14399187944559e-14,b=-0.2888368287336101,c=-0.9573783402433498,d=302.9065813768229)
S22 = openmc.Plane(a=0.0,b=0.28883674078877686,c=0.9573783667759141,d=-242.7448182427731)
S23 = openmc.Plane(a=0.0,b=-0.28883674078877736,c=0.9573783667759139,d=449.385364927687)
S24 = openmc.ZCone(x0=936.819833460203,y0=-1198.13390304907,z0=-41.7687503544415,r2=0.359595959600911)
S25 = openmc.ZCone(x0=936.8198334601962,y0=-1198.13390304907,z0=194.76869911468765,r2=0.35959663955436055)
S26 = openmc.ZCone(x0=936.819833460203,y0=-1198.13390304907,z0=16.380556954797427,r2=0.35959596025630064)
S27 = openmc.ZCone(x0=936.8198334601962,y0=-1198.13390304907,z0=136.61944677847077,r2=0.35959663955390514)
S28 = openmc.XPlane(x0=900.6420869506876)
S29 = openmc.XPlane(x0=972.9975799697046)
S30 = openmc.YPlane(y0=-1234.3116495585787)
S31 = openmc.YPlane(y0=-1161.9561565395616)
S32 = openmc.ZPlane(z0=-10.500000000000098)
S33 = openmc.ZPlane(z0=163.49999999999977)
S34 = openmc.Sphere(x0=936.8198334601962,y0=-1198.13390304907,z0=76.49999999999984,r=102.94755798894408, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((-S18 & +S4 & -S3 & -S2)))
C2 = openmc.Cell(name="", region=((-S7 & +S19 & +S5 & +S6)))
C3 = openmc.Cell(name="", region=((+S2 & +S4 & +S20 & -S9 & -S8 & +S1) | (-S1 & +S2 & +S4 & +S21 & -S9 & -S8)))
C4 = openmc.Cell(name="", region=((-S8 & -S4)))
C5 = openmc.Cell(name="", region=((+S6 & +S10 & -S11 & +S22 & -S5 & +S1) | (-S1 & +S6 & +S10 & -S11 & +S23 & -S5)))
C6 = openmc.Cell(name="", region=((-S6 & +S10)))
C7 = openmc.Cell(name="", region=((-S14 & -S12 & +S13 & +S15)))
C8 = openmc.Cell(name="", region=((-S15 & -S12 & +S13)))
C9 = openmc.Cell(name="", region=((+S8 & +S16 & -S13 & -S9 & +S24 & +S1) | (-S1 & +S8 & +S16 & -S13 & -S9 & +S24)))
C10 = openmc.Cell(name="", region=((+S12 & +S17 & -S11 & -S10 & +S25 & +S1) | (-S1 & +S12 & +S17 & -S11 & -S10 & +S25)))
C11 = openmc.Cell(name="", region=((-S16 & +S8 & -S13 & +S1) | (-S26 & +S8 & +S16 & -S13 & +S1) | (-S16 & -S1 & -S13 & +S8) | (-S1 & -S26 & +S8 & +S16 & -S13)))
C12 = openmc.Cell(name="", region=((+S12 & -S10 & +S1 & -S17) | (-S27 & +S12 & +S17 & -S10 & +S1) | (-S1 & +S12 & -S10 & -S17) | (-S1 & -S27 & +S12 & +S17 & -S10)))
C13 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(900.642, 972.998, -1234.312, -1161.956, -10.500, 163.500). Enclosed cells : (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)", region=(+S28 & -S29 & +S30 & -S31 & +S32 & -S33 & ((+S8 | +S4) & (+S6 | -S10) & (+S15 | +S12 | -S13) & ((-S8 | +S13) | (+S16 & +S26)) & ((+S10 | -S12) | (+S17 & +S27)) & ((+S9) | ((((-S1 | -S20) & (+S1 | -S21)) | (-S4 | -S2 | +S8)) & (-S24 | -S16 | +S13 | -S8))) & ((+S11) | ((((-S1 | -S22) & (+S1 | -S23)) | (-S6 | +S5 | -S10)) & (-S25 | -S17 | -S12 | +S10))) & (+S14 | +S12 | -S13 | -S15) & (+S18 | +S3 | -S4 | +S2) & (-S19 | +S7 | -S5 | -S6))))
C14 = openmc.Cell(name="", region=(-S34 & (-S28 | +S29 | -S30 | +S31 | -S32 | +S33)))

geometry = openmc.Geometry([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14])
geometry.export_to_xml()
