# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.YPlane(y0=0.0)
S2 = openmc.Plane(a=0.8535533905931653,b=-0.14644660940702836,c=-0.5000000000000968,d=-0.22928932188144438)
S3 = openmc.Plane(a=0.4999999999998401,b=0.4999999999998401,c=0.7071067811867738,d=0.7742640687120064)
S4 = openmc.Plane(a=-0.14644660940702836,b=0.8535533905931653,c=-0.5000000000000968,d=-0.22928932188144444)
S5 = openmc.Plane(a=0.4999999999998401,b=0.4999999999998401,c=0.7071067811867738,d=0.5242640687120322)
S6 = openmc.Plane(a=0.8535533906008934,b=-0.14644660940642437,c=-0.49999999998708083,d=0.7707106781290783)
S7 = openmc.Plane(a=-0.1464466094062581,b=0.8535533905873345,c=-0.5000000000102761,d=0.7707106781105685)
S8 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=1.0,r1=0.2,r2=0.2)
S9 = openmc.Plane(a=0.6940799223807855,b=0.7198979520375666,c=-0.0,d=0.0)
S10 = openmc.ZCone(x0=0.0,y0=0.0,z0=-0.8608987001845967,r2=1.0632390007145118)
S11 = openmc.Plane(a=0.999833343449735,b=-0.018256103804598255,c=0.0,d=0.0)
S12 = openmc.ZCone(x0=0.0,y0=0.0,z0=-0.4359001690591523,r2=2.2229929322479554)
S13 = openmc.XPlane(x0=-1.045124922299385)
S14 = openmc.XPlane(x0=2.2360918927339135)
S15 = openmc.YPlane(y0=-1.0365122076096103)
S16 = openmc.YPlane(y0=2.236091892733914)
S17 = openmc.ZPlane(z0=-1.1420000000000001)
S18 = openmc.ZPlane(z0=1.7767766952966753)
S19 = openmc.Sphere(x0=0.5954834852172645,y0=0.5997898425621518,z0=0.3173883476483377,r=2.7931791996144923, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S1 & +S2 & +S4 & +S5 & +S8 & +S9 & -S10 & -S7 & -S6 & -S3) | (+S4 & +S5 & +S8 & +S11 & -S12 & -S1)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.045, 2.236, -1.037, 2.236, -1.142, 1.777). Enclosed cells : (1)", region=(+S13 & -S14 & +S15 & -S16 & +S17 & -S18 & (((+S10 | -S9 | +S7 | +S6 | +S3 | -S2 | -S1) & (+S12 | -S11 | +S1)) | (-S8 | -S5 | -S4))))
C3 = openmc.Cell(name="", region=(-S19 & (-S13 | +S14 | -S15 | +S16 | -S17 | +S18)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
