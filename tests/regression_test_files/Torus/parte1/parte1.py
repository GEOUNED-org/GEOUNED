# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.ZPlane(z0=1.05)
S2 = openmc.ZPlane(z0=1.0)
S3 = openmc.ZPlane(z0=0.0)
S4 = openmc.ZCylinder(x0=0.0,y0=0.0,r=0.2)
S5 = openmc.ZTorus(x0=0.0,y0=0.0,z0=1.0,r=0.15000000000000002,r1=0.05,r2=0.05)
S6 = openmc.ZCone(x0=0.0,y0=0.0,z0=0.9,r2=0.9999999999999998)
S7 = openmc.XPlane(x0=-1.216478440058479)
S8 = openmc.XPlane(x0=1.216478440058479)
S9 = openmc.YPlane(y0=-1.216478440058479)
S10 = openmc.YPlane(y0=1.216478440058479)
S11 = openmc.ZPlane(z0=-1.0)
S12 = openmc.ZPlane(z0=2.0500000000000003)
S13 = openmc.Sphere(x0=0.0,y0=0.0,z0=0.525,r=2.344949739269584, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((-S6 & +S2 & +S5 & -S1) | (+S3 & -S4 & +S5 & -S2)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.216, 1.216, -1.216, 1.216, -1.000, 2.050). Enclosed cells : (1)", region=(+S7 & -S8 & +S9 & -S10 & +S11 & -S12 & ((-S5) | ((+S4 | -S3 | +S2) & (+S6 | +S1 | -S2)))))
C3 = openmc.Cell(name="", region=(-S13 & (-S7 | +S8 | -S9 | +S10 | -S11 | +S12)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
