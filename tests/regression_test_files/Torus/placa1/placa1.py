# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.XPlane(x0=0.0)
S2 = openmc.YPlane(y0=0.0)
S3 = openmc.ZPlane(z0=0.5)
S4 = openmc.ZPlane(z0=-0.5)
S5 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=10.0,r1=2.0,r2=2.0)
S6 = openmc.Plane(a=0.7071067811864011,b=0.707106781186694,c=-0.0,d=0.0)
S7 = openmc.ZCylinder(x0=0.0,y0=0.0,r=8.063508326896446)
S8 = openmc.XPlane(x0=-1.0000000000038456)
S9 = openmc.XPlane(x0=10.286925078508741)
S10 = openmc.YPlane(y0=-1.0)
S11 = openmc.YPlane(y0=10.286925078508741)
S12 = openmc.ZPlane(z0=-2.42)
S13 = openmc.ZPlane(z0=2.42)
S14 = openmc.Sphere(x0=4.643462539252448,y0=4.6434625392543705,z0=0.0,r=8.506686188761186, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S1 & +S2 & +S4 & +S5 & +S6 & -S7 & -S3)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.000, 10.287, -1.000, 10.287, -2.420, 2.420). Enclosed cells : (1)", region=(+S8 & -S9 & +S10 & -S11 & +S12 & -S13 & (-S1 | -S2 | -S4 | -S5 | -S6 | +S7 | +S3)))
C3 = openmc.Cell(name="", region=(-S14 & (-S8 | +S9 | -S10 | +S11 | -S12 | +S13)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
