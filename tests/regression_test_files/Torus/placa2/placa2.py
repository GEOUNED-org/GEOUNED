# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.XPlane(x0=0.0)
S2 = openmc.XPlane(x0=10.0)
S3 = openmc.YPlane(y0=10.0)
S4 = openmc.YPlane(y0=0.0)
S5 = openmc.ZPlane(z0=0.5)
S6 = openmc.ZPlane(z0=-0.5)
S7 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=10.0,r1=2.0,r2=2.0)
S8 = openmc.Plane(a=0.7071067811864011,b=0.707106781186694,c=-0.0,d=0.0)
S9 = openmc.XPlane(x0=-1.0000000000038456)
S10 = openmc.XPlane(x0=11.881510882689469)
S11 = openmc.YPlane(y0=-1.0)
S12 = openmc.YPlane(y0=11.88151088269084)
S13 = openmc.ZPlane(z0=-2.42)
S14 = openmc.ZPlane(z0=2.42)
S15 = openmc.Sphere(x0=5.440755441342812,y0=5.44075544134542,z0=0.0,r=9.613090709412852, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S1 & +S4 & +S6 & +S8 & -S7 & -S5 & -S3 & -S2)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.000, 11.882, -1.000, 11.882, -2.420, 2.420). Enclosed cells : (1)", region=(+S9 & -S10 & +S11 & -S12 & +S13 & -S14 & (-S1 | -S4 | -S6 | -S8 | +S7 | +S5 | +S3 | +S2)))
C3 = openmc.Cell(name="", region=(-S15 & (-S9 | +S10 | -S11 | +S12 | -S13 | +S14)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
