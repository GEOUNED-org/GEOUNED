# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.YPlane(y0=0.0)
S2 = openmc.Plane(a=0.8535533905931653,b=-0.14644660940702836,c=-0.5000000000000968,d=-0.22928932188144444)
S3 = openmc.Plane(a=0.14644660940577459,b=-0.8535533905988775,c=0.49999999999071254,d=0.22928932187866435)
S4 = openmc.Plane(a=0.8535533906008934,b=-0.14644660940642437,c=-0.49999999998708083,d=0.7707106781290783)
S5 = openmc.Plane(a=0.49999999999851025,b=0.49999999999804257,c=0.707106781188985,d=0.7742640687096416)
S6 = openmc.Plane(a=-0.1464466094062581,b=0.8535533905873345,c=-0.5000000000102761,d=0.7707106781105685)
S7 = openmc.Plane(a=-0.49999999998759026,b=-0.4999999999779706,c=-0.7071067812108995,d=-0.5242640686977567)
S8 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=1.0,r1=0.2,r2=0.2)
S9 = openmc.Plane(a=0.6940799223807855,b=0.7198979520375666,c=-0.0,d=0.0)
S10 = openmc.Plane(a=0.707106781186521,b=0.707106781186574,c=-0.0,d=0.0)
S11 = openmc.Plane(a=0.999833343449735,b=-0.01825610380459781,c=0.0,d=0.0)
S12 = openmc.XPlane(x0=-1.046446609407031)
S13 = openmc.XPlane(x0=2.2360918927339135)
S14 = openmc.YPlane(y0=-1.046446609407031)
S15 = openmc.YPlane(y0=2.2360918927339135)
S16 = openmc.ZPlane(z0=-1.2001690131616787)
S17 = openmc.ZPlane(z0=1.2001443337378999)
S18 = openmc.Sphere(x0=0.5948226416634415,y0=0.5948226416634415,z0=-1.2339711889364225e-05,r=2.6652866513864244, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S1 & +S2 & +S9 & +S10 & -S8 & -S7 & -S6 & -S5 & -S4 & -S3) | (+S11 & -S8 & -S7 & -S4 & -S3 & -S1)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.046, 2.236, -1.046, 2.236, -1.200, 1.200). Enclosed cells : (1)", region=(+S12 & -S13 & +S14 & -S15 & +S16 & -S17 & (((-S10 | -S9 | +S6 | +S5 | -S2 | -S1) & (+S1 | -S11)) | (+S8 | +S7 | +S4 | +S3))))
C3 = openmc.Cell(name="", region=(-S18 & (-S12 | +S13 | -S14 | +S15 | -S16 | +S17)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
