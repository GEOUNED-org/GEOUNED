# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.YPlane(y0=-1.2246467991473533e-15)
S2 = openmc.ZPlane(z0=1.5)
S3 = openmc.ZPlane(z0=-1.5)
S4 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=5.0,r1=1.5,r2=1.5)
S5 = openmc.ZCylinder(x0=0.0,y0=0.0,r=5.0)
S6 = openmc.XPlane(x0=-8.035549301900561)
S7 = openmc.XPlane(x0=8.035549301900561)
S8 = openmc.YPlane(y0=-8.035549301900561)
S9 = openmc.YPlane(y0=8.035549301900561)
S10 = openmc.ZPlane(z0=-2.5)
S11 = openmc.ZPlane(z0=2.5)
S12 = openmc.Sphere(x0=0.0,y0=0.0,z0=0.0,r=11.868439889693917, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S3 & -S5 & +S4 & -S2) | (-S4)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-8.036, 8.036, -8.036, 8.036, -2.500, 2.500). Enclosed cells : (1)", region=(+S6 & -S7 & +S8 & -S9 & +S10 & -S11 & ((+S4) & (+S5 | -S3 | +S2))))
C3 = openmc.Cell(name="", region=(-S12 & (-S6 | +S7 | -S8 | +S9 | -S10 | +S11)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
