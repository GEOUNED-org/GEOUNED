# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.ZPlane(z0=1.05)
S2 = openmc.ZPlane(z0=1.0)
S3 = openmc.ZCylinder(x0=0.0,y0=0.0,r=0.15000000000000002)
S4 = openmc.ZTorus(x0=0.0,y0=0.0,z0=1.0,r=0.15000000000000002,r1=0.05,r2=0.05)
S5 = openmc.XPlane(x0=-1.216478440058479)
S6 = openmc.XPlane(x0=1.216478440058479)
S7 = openmc.YPlane(y0=-1.216478440058479)
S8 = openmc.YPlane(y0=1.216478440058479)
S9 = openmc.ZPlane(z0=-0.05)
S10 = openmc.ZPlane(z0=2.0500000000000003)
S11 = openmc.Sphere(x0=0.0,y0=0.0,z0=1.0,r=2.055784529006017, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S2 & -S4 & -S3) | (-S4 & -S2)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.216, 1.216, -1.216, 1.216, -0.050, 2.050). Enclosed cells : (1)", region=(+S5 & -S6 & +S7 & -S8 & +S9 & -S10 & ((+S4) | (+S2 & +S3))))
C3 = openmc.Cell(name="", region=(-S11 & (-S5 | +S6 | -S7 | +S8 | -S9 | +S10)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
