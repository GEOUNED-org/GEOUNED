# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.XPlane(x0=10.0)
S2 = openmc.YPlane(y0=10.0)
S3 = openmc.ZPlane(z0=0.5)
S4 = openmc.ZPlane(z0=-0.5)
S5 = openmc.ZTorus(x0=0.0,y0=0.0,z0=0.0,r=10.0,r1=2.0,r2=2.0)
S6 = openmc.Plane(a=0.7071067811864795,b=0.7071067811866156,c=-0.0,d=0.0)
S7 = openmc.ZCylinder(x0=0.0,y0=0.0,r=11.936491673103749)
S8 = openmc.XPlane(x0=5.235636739339386)
S9 = openmc.XPlane(x0=11.881510882689469)
S10 = openmc.YPlane(y0=5.235636739341233)
S11 = openmc.YPlane(y0=11.88151088269084)
S12 = openmc.ZPlane(z0=-2.42)
S13 = openmc.ZPlane(z0=2.42)
S14 = openmc.Sphere(x0=8.558573811014426,y0=8.558573811016036,z0=0.0,r=5.39156809433339, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S4 & +S5 & +S6 & +S7 & -S1 & -S3 & -S2)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(5.236, 11.882, 5.236, 11.882, -2.420, 2.420). Enclosed cells : (1)", region=(+S8 & -S9 & +S10 & -S11 & +S12 & -S13 & (-S4 | -S5 | -S6 | -S7 | +S1 | +S3 | +S2)))
C3 = openmc.Cell(name="", region=(-S14 & (-S8 | +S9 | -S10 | +S11 | -S12 | +S13)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
