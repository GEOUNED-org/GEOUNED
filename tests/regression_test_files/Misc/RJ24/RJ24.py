# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.YPlane(y0=20.333627842546726)
S2 = openmc.YPlane(y0=7.780000000002563)
S3 = openmc.Plane(a=-0.8662909983479883,b=0.061557669409769165,c=-0.49573234665299326,d=-584.5874932413883)
S4 = openmc.Plane(a=0.963031163004562,b=-0.08632550825448074,c=-0.255184023219884,d=301.0601806896816)
S5 = openmc.Plane(a=-0.25614019826492096,b=-6.199999999998086e-16,c=-0.9666396426967017,d=-478.6930117225045)
S6 = openmc.Plane(a=0.963031163004562,b=-0.08632550825448074,c=-0.255184023219884,d=300.2601806897045)
S7 = openmc.Plane(a=-0.8396792997547015,b=0.2385256106059152,c=-0.48789774199982655,d=-567.8590179576098)
S8 = openmc.Plane(a=-0.9131222946349147,b=0.3281210677749693,c=0.24195916994997738,d=-282.748843167829)
S9 = openmc.Plane(a=-0.9131222946349147,b=0.3281210677749693,c=0.24195916994997738,d=-281.94884316775943)
S10 = openmc.Plane(a=-0.8396792997547026,b=0.23852561060591754,c=-0.48789774199982383,d=-567.059017957612)
S11 = openmc.Plane(a=0.866170179373007,b=-0.0641114697022977,c=0.4956197532560062,d=583.5950818829842)
S12 = openmc.Plane(a=-0.05354742238082972,b=-0.07003000258260655,c=-0.9961066570878087,d=-458.01087740684346)
S13 = openmc.Plane(a=-0.05366712821880614,b=-0.02121635135963243,c=-0.9983334642211142,d=-458.50235772450844)
S14 = openmc.XPlane(x0=412.74121465923895)
S15 = openmc.XPlane(x0=429.9555068358716)
S16 = openmc.YPlane(y0=6.780000000002477)
S17 = openmc.YPlane(y0=21.334218335822708)
S18 = openmc.ZPlane(z0=383.86980309684594)
S19 = openmc.ZPlane(z0=437.46504484421615)
S20 = openmc.Sphere(x0=421.34836074755526,y0=14.057109167912593,z0=410.66742397053105,r=29.652923927805052, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((-S1 & +S3 & +S6 & +S7 & +S8 & -S5 & -S4) | (+S8 & +S10 & -S11 & -S9 & -S6 & -S5 & +S2) | (+S8 & +S12 & -S11 & -S10 & -S6 & +S2) | (-S1 & +S3 & +S11 & +S13 & -S12) | (-S1 & +S3 & +S7 & +S8 & +S11 & +S12 & +S13 & -S6 & +S2) | (+S7 & +S11 & +S12 & -S13 & +S2)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(412.741, 429.956, 6.780, 21.334, 383.870, 437.465). Enclosed cells : (1)", region=(+S14 & -S15 & +S16 & -S17 & +S18 & -S19 & ((-S8 | -S12 | +S11 | +S10 | +S6 | -S2) & (-S7 | -S11 | -S12 | +S13 | -S2) & (((-S11 | -S13 | +S12) & (((-S2 | -S13 | -S12 | -S11 | +S6) & (+S4 | +S5 | -S6)) | (-S7 | -S8))) | (+S1 | -S3)) & (+S9 | -S8 | -S10 | +S11 | +S6 | +S5 | -S2))))
C3 = openmc.Cell(name="", region=(-S20 & (-S14 | +S15 | -S16 | +S17 | -S18 | +S19)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
