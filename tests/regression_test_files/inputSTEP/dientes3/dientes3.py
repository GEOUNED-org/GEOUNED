# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.XPlane(x0=0.0)
S2 = openmc.XPlane(x0=2.2)
S3 = openmc.XPlane(x0=5.0)
S4 = openmc.YPlane(y0=0.0)
S5 = openmc.YPlane(y0=1.0)
S6 = openmc.ZPlane(z0=0.0)
S7 = openmc.ZPlane(z0=1.0)
S8 = openmc.Plane(a=0.22766942561711898,b=-0.9737384826734389,c=0.0,d=0.2574381156893019)
S9 = openmc.Plane(a=0.6741760473800811,b=0.7385706852691694,c=-0.0,d=2.064112511980219)
S10 = openmc.Plane(a=-0.0919369635007322,b=-0.9957648290345793,c=0.0,d=-0.8594792433978343)
S11 = openmc.ZCylinder(x0=2.6,y0=0.6000000000000001,r=0.25)
S12 = openmc.ZCylinder(x0=2.25,y0=0.6000000000000001,r=0.25)
S13 = openmc.ZCylinder(x0=2.8000000000000003,y0=0.4,r=0.25)
S14 = openmc.ZCylinder(x0=2.4000000000000004,y0=0.4,r=0.25)
S15 = openmc.ZCylinder(x0=2.0,y0=0.4,r=0.25)
S16 = openmc.ZCylinder(x0=1.9000000000000001,y0=0.6000000000000001,r=0.25)
S17 = openmc.YPlane(y0=0.3542262026288628)
S18 = openmc.Plane(a=-0.9536568438832053,b=-0.30089636773268635,c=0.0,d=-2.439434920192107)
S19 = openmc.Plane(a=0.9756402832952213,b=0.21937647460842316,c=-0.0,d=2.2670656842841197)
S20 = openmc.Plane(a=0.4472135954997767,b=-0.8944271910000066,c=0.0,d=0.424852915724516)
S21 = openmc.Plane(a=0.943503204892064,b=-0.3313633992437967,c=0.0,d=2.1483374323054245)
S22 = openmc.Plane(a=0.9737384826734391,b=0.22766942561711884,c=-0.0,d=2.656938239040357)
S23 = openmc.Plane(a=-0.5275504894779767,b=0.8495236789233995,c=0.0,d=-0.693373053443679)
S24 = openmc.Plane(a=0.7974244108080556,b=-0.6034188504243344,c=0.0,d=1.9106082605483579)
S25 = openmc.XPlane(x0=-1.0)
S26 = openmc.XPlane(x0=6.0)
S27 = openmc.YPlane(y0=-1.0)
S28 = openmc.YPlane(y0=2.0)
S29 = openmc.ZPlane(z0=-1.0)
S30 = openmc.ZPlane(z0=2.0)
S31 = openmc.Sphere(x0=2.5,y0=0.5,z0=0.5,r=4.17452991365495, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((-S7 & -S12 & -S11 & +S6) | (+S6 & +S11 & -S17 & -S14 & -S13 & -S7) | (+S6 & +S11 & +S15 & -S14 & +S18 & -S12 & +S19 & -S7) | (+S6 & +S16 & -S15 & +S20 & -S7) | (+S6 & -S16 & -S15 & -S12 & -S7) | (+S6 & +S12 & -S14 & -S11 & +S21 & -S7) | (+S6 & +S14 & -S13 & -S11 & +S22 & -S7) | (+S1 & +S4 & +S6 & +S15 & -S7 & -S5 & -S2) | (+S2 & +S4 & +S6 & +S8 & +S11 & +S14 & -S7 & -S3) | (+S2 & +S6 & +S14 & +S23 & -S9 & -S7) | (+S6 & +S10 & +S11 & -S8 & -S7 & +S24) | (+S2 & +S6 & +S9 & +S11 & -S10 & -S8 & -S7 & -S5 & -S3)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1.000, 6.000, -1.000, 2.000, -1.000, 2.000). Enclosed cells : (1)", region=(+S25 & -S26 & +S27 & -S28 & +S29 & -S30 & (((+S12 | +S11) & (+S16 | +S15 | +S12) & (((+S10 | -S9 | +S5 | +S8) & (-S14 | -S4 | -S8)) | (+S3 | -S11 | -S2)) & ((+S13) | ((+S17 | -S11 | +S14) & (-S22 | -S14 | +S11))) & (-S1 | -S4 | -S15 | +S5 | +S2) & (-S19 | -S18 | -S11 | -S15 | +S14 | +S12) & (-S20 | -S16 | +S15) & (-S21 | -S12 | +S14 | +S11) & (-S23 | -S2 | -S14 | +S9) & (-S24 | -S10 | -S11 | +S8)) | (-S6 | +S7))))
C3 = openmc.Cell(name="", region=(-S31 & (-S25 | +S26 | -S27 | +S28 | -S29 | +S30)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
