# openMC geometry script generated by GEOUNED
import openmc

###############################################################################
# Define problem geometry
###############################################################################


# Surface setup
S1 = openmc.Plane(a=-0.7244847831936573,b=0.661603433658687,c=-0.1933977649609085,d=1766.6961577883758)
S2 = openmc.Plane(a=0.5294241686782023,b=-0.8423604593833217,c=0.10069213517903848,d=-1852.4828400981032)
S3 = openmc.Plane(a=0.2923717047220729,b=-0.9563047559632385,c=8.163417574678034e-13,d=-1778.1291382864679)
S4 = openmc.Cylinder(x0=-976.2874984686,y0=1504.7733195790001,z0=-330.03238701920003,r=3.0,dx=-0.7244847831936573,dy=0.661603433658687,dz=-0.1933977649609085)
S5 = openmc.Cylinder(x0=-976.2874984686,y0=1504.7733195790001,z0=-330.03238701920003,r=2.5,dx=-0.7244847831936573,dy=0.661603433658687,dz=-0.1933977649609085)
S6 = openmc.Cylinder(x0=-1009.294144067,y0=1550.802795418,z0=-337.044472998,r=3.0,dx=0.2923717047220729,dy=-0.9563047559632385,dz=8.163417574678036e-13)
S7 = openmc.Cylinder(x0=-1009.294144067,y0=1550.802795418,z0=-337.044472998,r=2.5,dx=0.2923717047220729,dy=-0.9563047559632385,dz=8.163417574678036e-13)
S8 = openmc.XPlane(x0=-1013.1630583349456)
S9 = openmc.XPlane(x0=-973.2196260861045)
S10 = openmc.YPlane(y0=1501.5237578285387)
S11 = openmc.YPlane(y0=1552.679910532349)
S12 = openmc.ZPlane(z0=-341.16073333449503)
S13 = openmc.ZPlane(z0=-326.0890257194998)
S14 = openmc.Sphere(x0=-993.191342210525,y0=1527.1018341804438,z0=-333.6248795269974,r=33.98141178842237, boundary_type="vacuum")

# Cell definition 
C1 = openmc.Cell(name="", region=((+S1 & +S2 & -S4 & +S5) | (-S6 & +S3 & -S2 & +S7)))
C2 = openmc.Cell(name="Automatic Generated Void Cell. Enclosure(-1013.163, -973.220, 1501.524, 1552.680, -341.161, -326.089). Enclosed cells : (1)", region=(+S8 & -S9 & +S10 & -S11 & +S12 & -S13 & ((-S5 | +S4 | -S1 | -S2) & (-S7 | +S6 | -S3 | +S2))))
C3 = openmc.Cell(name="", region=(-S14 & (-S8 | +S9 | -S10 | +S11 | -S12 | +S13)))

geometry = openmc.Geometry([C1, C2, C3])
geometry.export_to_xml()
